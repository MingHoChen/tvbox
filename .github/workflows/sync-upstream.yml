name: Sync Fork from Upstream

# 這定義了工作流程何時會被觸發
on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

# 工作流程包含的任務 (jobs)
jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest

    # 步驟列表
    steps:
      # 步驟 1: 檢查你的目標倉庫 (即你的 Fork 倉庫)
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          # 這裡將引用更改為你實際設定的 Secret 名稱：MH
          token: ${{ secrets.MH }} # <--- 修改這一行，將 PAT_TOKEN 改為 MH

      # 步驟 2: 配置 Git 使用者資訊
      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "Git user configured."

      # 步驟 3: 添加上游遠端倉庫
      - name: Add upstream remote if not exists
        run: |
          if ! git remote -v | grep -q 'upstream'; then
            git remote add upstream https://github.com/qist/tvbox.git
            echo "Upstream remote added."
          else
            echo "Upstream remote already exists."
          fi

      # 步驟 4: 從上游倉庫獲取所有分支和歷史
      - name: Fetch from upstream
        run: |
          echo "Fetching latest changes from upstream..."
          git fetch upstream
          echo "Fetch complete."

      # 步驟 5: 將上游更改合併到你的本地主分支
      - name: Merge upstream into main branch
        run: |
          MAIN_BRANCH="master" # <-- 請在這裡設定你的主分支名稱 (master 或 main)
          echo "Checking out branch: ${MAIN_BRANCH}..."
          git checkout "${MAIN_BRANCH}"
          
          echo "Merging upstream/${MAIN_BRANCH} into ${MAIN_BRANCH}..."
          git merge upstream/"${MAIN_BRANCH}"
          
          if [ $? -ne 0 ]; then
            echo "::error::Merge conflict detected. Please resolve manually."
            exit 1
          fi
          echo "Merge complete."

      # 步驟 6: 將更新推送到你的 GitHub Fork (origin)
      - name: Push changes to origin
        run: |
          MAIN_BRANCH="master" # <-- 請在這裡設定你的主分支名稱 (master 或 main)
          echo "Pushing changes to origin/${MAIN_BRANCH}..."
          git push origin "${MAIN_BRANCH}"
          echo "Push complete. Your fork is now synchronized!"

