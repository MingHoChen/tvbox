name: Sync Fork from Upstream

# 這定義了工作流程何時會被觸發
on:
  # 允許手動觸發此工作流程 (在 GitHub Actions 頁面點擊 "Run workflow")
  workflow_dispatch:

  # 定時觸發此工作流程
  # 以下 cron 表達式設定為每天 UTC 時間凌晨 3 點運行。
  # 你可以根據需要調整時間和頻率。
  # cron 語法參考：https://crontab.guru/
  schedule:
    - cron: '0 3 * * *'

# 工作流程包含的任務 (jobs)
jobs:
  sync_with_upstream:
    # 指定運行這個任務的執行環境
    runs-on: ubuntu-latest

    # 步驟列表
    steps:
      # 步驟 1: 檢查你的目標倉庫 (即你的 Fork 倉庫)
      - name: Checkout target repository
        uses: actions/checkout@v4 # 使用 actions/checkout@v4 來檢查代碼
        with:
          # 必須使用 Personal Access Token (PAT) 來擁有推送到你的 Fork 的權限
          # 請確保你已經在倉庫的 Secrets 中添加了名為 MH 的密鑰。
          token: ${{ secrets.MH }} # <-- 根據你設定的 Secret 名稱修改這裡

      # 步驟 2: 配置 Git 使用者資訊 (雖然會被重置覆蓋，但良好習慣保留)
      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "Git user configured."

      # 步驟 3: 添加上游遠端倉庫
      - name: Add upstream remote if not exists
        run: |
          if ! git remote -v | grep -q 'upstream'; then
            git remote add upstream https://github.com/qist/tvbox.git
            echo "Upstream remote added."
          else
            echo "Upstream remote already exists."
          fi

      # 步驟 4: 從上游倉庫獲取所有分支和歷史
      - name: Fetch from upstream
        run: |
          echo "Fetching latest changes from upstream..."
          git fetch upstream
          echo "Fetch complete."

      # 步驟 5: 將你的本地主分支強制重置到上游分支的狀態，並強制推送到你的 Fork
      # 警告：此操作會丟棄你的 Fork 上所有獨特的提交和歷史記錄，使其成為上游倉庫的精確副本。
      # 請確保你了解其影響。
      - name: Reset local branch and force push to origin
        run: |
          MAIN_BRANCH="master" # <-- 在這裡設定你的主分支名稱 (master 或 main)
          echo "Checking out branch: ${MAIN_BRANCH}..."
          git checkout "${MAIN_BRANCH}"
          
          echo "WARNING: Resetting local branch '${MAIN_BRANCH}' to 'upstream/${MAIN_BRANCH}'."
          echo "         This will discard ALL unique commits on your fork's ${MAIN_BRANCH} branch."
          echo "         Your fork will become an EXACT copy of the upstream's ${MAIN_BRANCH}."
          
          # 將本地分支強制重置到上游的狀態
          git reset --hard upstream/"${MAIN_BRANCH}"
          echo "Local branch reset complete."
          
          echo "Force pushing changes to origin/${MAIN_BRANCH}..."
          # 強制推送到你的 GitHub Fork，覆蓋原有的歷史
          # --force-with-lease 是一個更安全的強制推送，可以防止覆蓋他人新的提交
          # 但在自動化且你確定沒有其他人在該分支上工作時，單純的 --force 也常被使用。
          git push --force origin "${MAIN_BRANCH}"
          echo "Force push complete. Your fork is now an exact copy of upstream!"

      # 步驟 6: (可選) 清理 Git 垃圾，這有助於保持倉庫整潔
      - name: Clean up Git objects
        run: git gc --prune=now
        
      echo "All operations completed."
